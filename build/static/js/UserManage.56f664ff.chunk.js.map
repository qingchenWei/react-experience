{"version":3,"file":"static/js/UserManage.56f664ff.chunk.js","mappings":"kgBAEQA,EAAR,WAqHA,EApHMC,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IAERC,QAAUC,EAAAA,UAAgB,MAHP,EAInBC,UAAY,WACV,EAAKH,MAAMI,YAAW,EACvB,EANkB,CAElB,CA8GA,OA9GA,mCAKD,WACEC,KAAKJ,QAAQK,QACVC,iBACAC,MAAK,SAACC,GAKN,IACAC,OAAM,SAACC,GAENC,QAAQC,IAAIF,GACZG,EAAA,SAAc,0DACf,GACJ,uBACD,WAAU,IAAD,OACP,OACE,cACEC,MAAM,uCACNC,QAASX,KAAKL,MAAMgB,QACpBC,SAAUZ,KAAKF,UACfe,WAAW,eACXC,OAAQ,EACN,cAAQC,QAAS,kBAAM,EAAKC,aAAX,EAAjB,yBAA+C,MANnD,UAWE,cACEC,IAAKjB,KAAKJ,QACVsB,KAAK,QACLC,cAAenB,KAAKL,MAAMyB,UAC1BC,aAAa,MAJf,UAME,eAAKC,OAAQ,GAAb,WACE,cAAKC,KAAM,GAAX,UACE,mBACEC,MAAM,eACNN,KAAK,OACLO,MAAO,CACL,CACEC,UAAU,EACVjB,QAAS,gDANf,UAUE,sBAGJ,cAAKc,KAAM,GAAX,UACE,mBACEC,MAAM,eACNN,KAAK,MACLO,MAAO,CACL,CACEC,UAAU,EACVjB,QAAS,gDANf,UAUE,sBAGJ,cAAKc,KAAM,GAAX,UACE,mBACEC,MAAM,eACNN,KAAK,UACLO,MAAO,CACL,CACEC,UAAU,EACVjB,QAAS,gDANf,UAUE,sBAGJ,cAAKc,KAAM,GAAX,UACE,mBACEC,MAAM,eACNN,KAAK,OACLO,MAAO,CACL,CACEC,UAAU,EACVjB,QAAS,gDANf,UAUE,cACEkB,KAAK,OACLC,YAAU,EACVC,MAAO,CACLC,MAAO,QAJX,SAOG,CAAC,OAAQ,QAAQC,KAAI,SAACC,GACrB,OAAO,SAACvC,EAAD,CAAmBW,MAAO4B,GAAbA,EACrB,gBAQhB,OAjHGtC,CAAoBuC,EAAAA,e,UCDpBC,EAAc,SAACC,GACnB,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,oBACLC,OAAQ,OACRH,KAAAA,GAEH,EAEKI,EAAa,SAACJ,GAClB,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,mBACLC,OAAQ,OACRH,KAAAA,GAEH,E,mBCKOK,EAAR,gBACQC,EAAR,YAuPA,EAtPyB,WACvB,MAAe,cAARC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOlC,EAAP,KAAgBZ,EAAhB,KACA,GAAkC8C,EAAAA,EAAAA,UAAS,MAA3C,eAAOzB,EAAP,KAAkB4B,EAAlB,KAL6B,SAMdC,EANc,gFAM7B,WAAyBC,GAAzB,8FACyBhB,EAAYgB,GADrC,gBACUf,EADV,EACUA,KACRY,EAAaZ,GAFf,4CAN6B,uBAU7BgB,EAAAA,EAAAA,YAAU,WACRT,EAAKU,eAAe,CAClBC,QAAS,GACTnC,KAAM,GACNoC,IAAK,GACLC,QAAQ,EACRC,UAAW,GACXC,UAAW,KAGbR,EADiBP,EAAKgB,iBAEvB,GAAE,IACH,IAyDMC,EAAU,CACd,CACEjD,MAAO,eACPkD,UAAW,QACX9B,MAAO,OACP+B,OAAQ,SAACC,EAAMC,GAAP,OACN,cAAiBhD,QAAS,kBA5Cf,SAACgD,GAEhBpB,EAAS,2BAAD,OAA4BoB,EAAK7C,MAAQ,CAC/C8C,MAAO,CAAEC,IAAKF,EAAKE,IAAKC,QAASH,EAAKG,QAASC,KAAMJ,EAAKI,OAI7D,CAqCqCC,CAASL,EAAf,EAA1B,SACGD,GADKC,EAAKM,GADP,EAKRC,MAAO,QAGT,CACExC,MAAO,QACPpB,MAAO,eACPkD,UAAW,WAEb,CACE9B,MAAO,QACPpB,MAAO,eACPkD,UAAW,QAEb,CACE9B,MAAO,QACPpB,MAAO,eACPkD,UAAW,SACXC,OAAQ,SAACU,EAAGC,GAAJ,OAAe,cAAwBC,QAASD,EAAOjB,QAA3BiB,EAAOH,GAAnC,GAEV,CACEvC,MAAO,QACPpB,MAAO,2BACPkD,UAAW,aAEb,CACE9B,MAAO,QACPpB,MAAO,2BACPkD,UAAW,aAEb,CACElD,MAAO,eACPgE,IAAK,SACLJ,MAAO,QACPxC,MAAO,QACP+B,OAAQ,SAACU,EAAGC,GAAJ,OACN,eAAOG,KAAK,SAAZ,WACE,cACEC,KAAK,UACL7D,QAAS,WACPhB,GAAW,GACXiD,EAAawB,EACd,EALH,2BASA,cACEI,KAAK,UACLC,QAAM,EACNC,OAAK,EACL/D,QAAS,kBApHFsD,EAoHgBG,EAAOH,QAnHtC5B,EAAQ,CACN/B,MAAO,4EACPqE,MAAM,SAACC,EAAA,EAAD,IACNC,OAAQ,SACRC,OAAQ,SACRrE,WAAY,SAENsE,KAPA,WAOQ,OAAD,gIACQ5C,EAAW,CAAE8B,GAAAA,IADrB,OACLlC,EADK,OAEX1B,EAAA,WAAgB0B,EAAK1B,SACrBsC,EAAaZ,EAAKA,MAHP,4CAIZ,EAEDvB,SAbM,WAcJL,QAAQC,IAAI,SACb,IAhBW,IAAC6D,CAoHE,EAJX,4BAVwBG,EAAOH,GAD3B,IAuBZ,OACE,iCACE,sDACA,eACEe,OAAO,aACPC,SAAU,CAAE9D,KAAM,GAClBmB,KAAMA,EACN4C,SAvGW,SAACC,GACH,CAAC,YAAa,aACtBC,SAAQ,SAACxD,GACRuD,EAAOvD,GAAMyD,QAAU,IACzBF,GAAM,kBACDA,GADC,IAEJG,KAAM,CACJC,IAAOJ,EAAOG,KAAK,IAAIE,OAAO,cAC9BD,IAAOJ,EAAOG,KAAK,IAAIE,OAAO,iBAIrC,IACDrF,QAAQC,IAAI,YAAa+E,GAEzBtC,EAAUsC,EAaX,EAuEG,WAME,eAAKjE,OAAQ,GAAb,WACE,cAAKuE,GAAI,CAAEtE,KAAM,IAAMuE,GAAI,CAAEvE,KAAM,GAAKA,KAAM,GAA9C,UACE,mBAAWC,MAAM,eAAKN,KAAK,UAA3B,UACE,sBAIJ,cAAK2E,GAAI,CAAEtE,KAAM,IAAMuE,GAAI,CAAEvE,KAAM,GAAKA,KAAM,GAA9C,UACE,mBAAWC,MAAM,eAAKN,KAAK,OAA3B,UACE,sBAGJ,cAAK2E,GAAI,CAAEtE,KAAM,IAAMuE,GAAI,CAAEvE,KAAM,GAAKA,KAAM,GAA9C,UACE,mBAAWC,MAAM,2BAAON,KAAK,MAA7B,UACE,sBAIJ,cAAK2E,GAAI,CAAEtE,KAAM,IAAMuE,GAAI,CAAEvE,KAAM,GAAKA,KAAM,GAA9C,UACE,mBAAWC,MAAM,2BAAON,KAAK,YAA7B,UACE,SAACsB,EAAD,CACEX,MAAO,CACLC,MAAO,eAKf,cAAK+D,GAAI,CAAEtE,KAAM,IAAMuE,GAAI,CAAEvE,KAAM,GAAKA,KAAM,GAA9C,UACE,mBAAWC,MAAM,2BAAON,KAAK,YAA7B,UACE,SAACsB,EAAD,CACEX,MAAO,CACLC,MAAO,eAKf,cAAK+D,GAAI,CAAEtE,KAAM,IAAMuE,GAAI,CAAEvE,KAAM,GAAKA,KAAM,GAA9C,UACE,mBAAWC,MAAM,2BAAOuE,cAAc,UAAU7E,KAAK,SAArD,UACE,yBAIN,cAAK8E,QAAQ,SAAb,UACE,eACEzE,KAAM,EACNM,MAAO,CAAEoE,QAAS,OAAQC,eAAgB,gBAF5C,WAIE,cAAQtB,KAAK,UAAU7D,QAAS,kBAAM2B,EAAKyD,QAAX,EAAhC,2BAGA,cACEvB,KAAK,QACL7D,QAAS,WACP2B,EAAK0D,cACL1D,EAAKU,eAAe,CAClBlC,KAAM,GACN+C,IAAK,GACLC,QAAS,GACTmC,IAAK,GACLX,KAAM,IAET,EAXH,mCAkBN,sDACA,cACE/B,QAASA,EACT2C,WAAYxD,GAAwB,GACpCyD,OAAQ,CACNC,EAAG,IACHC,EAAG,KAELC,OAAQ,SAACA,GAAD,OAAYA,EAAOrC,EAAnB,IAETjD,GACC,SAAC,EAAD,CACEA,UAAWA,EACXT,QAASA,EACTZ,WAAYA,IAGd,KAIP,C","sources":["pages/UserManage/compontents/updateModal.jsx","api/systemApi.js","pages/UserManage/index.jsx"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Modal, Button, message, Col, Row, Form, Input, Select } from \"antd\";\nconst { Option } = Select;\nclass UpdateModal extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n  refForm = React.createRef(null);\n  hideModal = () => {\n    this.props.setVisible(false);\n  };\n  buttonClick() {\n    this.refForm.current\n      .validateFields()\n      .then((value) => {\n        // 验证通过后进入\n        // const { name, age } = value;\n        // console.log(name, age); // dee 18\n        // message.success(\"检验通过\");\n      })\n      .catch((err) => {\n        // 验证不通过时进入\n        console.log(err);\n        message.error(\"请检查信息是否完整!\");\n      });\n  }\n  render() {\n    return (\n      <Modal\n        title=\"修改用户信息\"\n        visible={this.props.visible}\n        onCancel={this.hideModal}\n        cancelText=\"取消\"\n        footer={[\n          <Button onClick={() => this.buttonClick()} key=\"1\">\n            确认\n          </Button>,\n        ]}\n      >\n        <Form\n          ref={this.refForm}\n          name=\"basic\"\n          initialValues={this.props.updataRow}\n          autoComplete=\"off\"\n        >\n          <Row gutter={24}>\n            <Col span={12}>\n              <Form.Item\n                label=\"姓名\"\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入你的名称!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"年龄\"\n                name=\"age\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入你的年龄!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"地址\"\n                name=\"address\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入你的年龄!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"标签\"\n                name=\"tags\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请选择你的标签!\",\n                  },\n                ]}\n              >\n                <Select\n                  mode=\"tags\"\n                  allowClear\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  {[\"nice\", \"good\"].map((item) => {\n                    return <Option key={item} value={item}></Option>;\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default UpdateModal;\n","import request from \"@/utils/request\";\n//获取用户列表\nconst getUserList = (data) => {\n  return request({\n    url: \"/user/getUserList\",\n    method: \"post\",\n    data,\n  });\n};\n// 删除用户\nconst deleteUser = (data) => {\n  return request({\n    url: \"/user/deleteUser\",\n    method: \"post\",\n    data,\n  });\n};\n// 更新用户信息\nconst updateUser = (data) => {\n  return request({\n    url: \"/user/updateUser\",\n    method: \"post\",\n    data,\n  });\n};\nexport { getUserList, deleteUser, updateUser };\n","import React, { useState, useEffect } from \"react\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  DatePicker,\n  Col,\n  Row,\n  Table,\n  Space,\n  Switch,\n  Modal,\n  message,\n} from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.less\";\nimport UpdateModal from \"./compontents/updateModal\";\nimport { getUserList, deleteUser } from \"@/api/systemApi\";\nimport moment from \"moment\";\nconst { RangePicker } = DatePicker;\nconst { confirm } = Modal;\nconst FormDisabledDemo = () => {\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const [tabelData, setTabelData] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [updataRow, setupdataRow] = useState(null);\n  async function fetchData(params) {\n    const { data } = await getUserList(params);\n    setTabelData(data);\n  }\n  useEffect(() => {\n    form.setFieldsValue({\n      account: \"\",\n      name: \"\",\n      tel: \"\",\n      status: false,\n      loginTime: [],\n      creatTime: [],\n    });\n    const fromData = form.getFieldsValue(); // {name: 'dee', age: 18} 获取整个表单的值\n    fetchData(fromData);\n  }, []);\n  const onDetel = (id) => {\n    confirm({\n      title: \"你确定要删除该用户信息吗?\",\n      icon: <ExclamationCircleOutlined />,\n      okText: \"是\",\n      okType: \"danger\",\n      cancelText: \"否\",\n\n      async onOk() {\n        const data = await deleteUser({ id });\n        message.success(data.message);\n        setTabelData(data.data);\n      },\n\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n  const toDetail = (Item) => {\n    //拼接方式用useLocation的search接收,state用state接收\n    navigate(`/system/userDetail?name=${Item.name}`, {\n      state: { age: Item.age, address: Item.address, tags: Item.tags },\n    });\n    // param传递用useParams接受\n    // navigate(`/home/message/detail/${id}/${title}`, { replace: true });\n  };\n\n  const onFinish = (values) => {\n    const time = [\"loginTime\", \"creatTime\"];\n    time.forEach((item) => {\n      if (values[item].length >= 1) {\n        values = {\n          ...values,\n          time: [\n            moment(values.time[0]).format(\"YYYY-MM-DD\"),\n            moment(values.time[1]).format(\"YYYY-MM-DD\"),\n          ],\n        };\n      }\n    });\n    console.log(\"values===\", values);\n\n    fetchData(values);\n    //表单校验\n    // form\n    //   .validateFields()\n    //   .then((value) => {\n    //     // 验证通过后进入\n    //     const { name, age } = value;\n    //     console.log(name, age); // dee 18\n    //   })\n    //   .catch((err) => {\n    //     // 验证不通过时进入\n    //     console.log(err);\n    //   });\n  };\n  const columns = [\n    {\n      title: \"序号\",\n      dataIndex: \"index\",\n      width: \"70px\",\n      render: (text, Item) => (\n        <a key={Item.id} onClick={() => toDetail(Item)}>\n          {text}\n        </a>\n      ),\n      fixed: \"left\",\n    },\n\n    {\n      width: \"100px\",\n      title: \"账号\",\n      dataIndex: \"account\",\n    },\n    {\n      width: \"130px\",\n      title: \"姓名\",\n      dataIndex: \"name\",\n    },\n    {\n      width: \"100px\",\n      title: \"状态\",\n      dataIndex: \"stauts\",\n      render: (_, record) => <Switch key={record.id} checked={record.status} />,\n    },\n    {\n      width: \"210px\",\n      title: \"登陆时间\",\n      dataIndex: \"loginTime\",\n    },\n    {\n      width: \"210px\",\n      title: \"创建时间\",\n      dataIndex: \"creatTime\",\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      fixed: \"right\",\n      width: \"170px\",\n      render: (_, record) => (\n        <Space size=\"middle\" key={record.id}>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setVisible(true);\n              setupdataRow(record);\n            }}\n          >\n            修改\n          </Button>\n          <Button\n            type=\"primary\"\n            danger\n            ghost\n            onClick={() => onDetel(record.id)}\n          >\n            删除\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n  return (\n    <>\n      <h4>搜索条件</h4>\n      <Form\n        layout=\"horizontal\"\n        labelCol={{ span: 6 }}\n        form={form}\n        onFinish={onFinish}\n      >\n        <Row gutter={24}>\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"账号\" name=\"account\">\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"姓名\" name=\"name\">\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"手机号码\" name=\"tel\">\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"登录时间\" name=\"loginTime\">\n              <RangePicker\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"创建时间\" name=\"creatTime\">\n              <RangePicker\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </Form.Item>\n          </Col>\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"账号状态\" valuePropName=\"checked\" name=\"status\">\n              <Switch />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col\n            span={5}\n            style={{ display: \"flex\", justifyContent: \"space-around\" }}\n          >\n            <Button type=\"primary\" onClick={() => form.submit()}>\n              提交\n            </Button>\n            <Button\n              type=\"ghost\"\n              onClick={() => {\n                form.resetFields();\n                form.setFieldsValue({\n                  name: \"\",\n                  age: \"\",\n                  address: \"\",\n                  sex: \"\",\n                  time: [],\n                });\n              }}\n            >\n              重置\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <h4>数据列表</h4>\n      <Table\n        columns={columns}\n        dataSource={tabelData ? tabelData : []}\n        scroll={{\n          x: 900,\n          y: 300,\n        }}\n        rowKey={(rowKey) => rowKey.id}\n      />\n      {updataRow ? (\n        <UpdateModal\n          updataRow={updataRow}\n          visible={visible}\n          setVisible={setVisible}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default FormDisabledDemo;\n"],"names":["Option","UpdateModal","props","refForm","React","hideModal","setVisible","this","current","validateFields","then","value","catch","err","console","log","message","title","visible","onCancel","cancelText","footer","onClick","buttonClick","ref","name","initialValues","updataRow","autoComplete","gutter","span","label","rules","required","mode","allowClear","style","width","map","item","PureComponent","getUserList","data","request","url","method","deleteUser","RangePicker","confirm","form","navigate","useNavigate","useState","tabelData","setTabelData","setupdataRow","fetchData","params","useEffect","setFieldsValue","account","tel","status","loginTime","creatTime","getFieldsValue","columns","dataIndex","render","text","Item","state","age","address","tags","toDetail","id","fixed","_","record","checked","key","size","type","danger","ghost","icon","ExclamationCircleOutlined","okText","okType","onOk","layout","labelCol","onFinish","values","forEach","length","time","moment","format","lg","xl","valuePropName","justify","display","justifyContent","submit","resetFields","sex","dataSource","scroll","x","y","rowKey"],"sourceRoot":""}