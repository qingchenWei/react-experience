{"version":3,"file":"static/js/UserManage.16e1b0d6.chunk.js","mappings":"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","sources":["pages/UserManage/compontents/updateModal.jsx","api/systemApi.js","pages/UserManage/index.jsx"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Modal, Button, message, Col, Row, Form, Input, Select } from \"antd\";\nconst { Option } = Select;\nclass UpdateModal extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n  refForm = React.createRef(null);\n  hideModal = () => {\n    this.props.setVisible(false);\n  };\n  buttonClick() {\n    this.refForm.current\n      .validateFields()\n      .then((value) => {\n        // 验证通过后进入\n        const { name, age } = value;\n        console.log(name, age); // dee 18\n        message.success(\"检验通过\");\n      })\n      .catch((err) => {\n        // 验证不通过时进入\n        console.log(err);\n        message.error(\"检验失败\");\n      });\n  }\n  render() {\n    return (\n      <Modal\n        title=\"修改用户信息\"\n        visible={this.props.visible}\n        onCancel={this.hideModal}\n        cancelText=\"取消\"\n        footer={[\n          <Button onClick={() => this.buttonClick()} key=\"1\">\n            确认\n          </Button>,\n        ]}\n      >\n        <Form\n          ref={this.refForm}\n          name=\"basic\"\n          initialValues={this.props.updataRow}\n          autoComplete=\"off\"\n        >\n          <Row gutter={24}>\n            <Col span={12}>\n              <Form.Item\n                label=\"姓名\"\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入你的名称!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"年龄\"\n                name=\"age\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入你的年龄!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"地址\"\n                name=\"address\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入你的年龄!\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"标签\"\n                name=\"tags\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请选择你的标签!\",\n                  },\n                ]}\n              >\n                <Select\n                  mode=\"tags\"\n                  allowClear\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  {[\"nice\", \"good\"].map((item) => {\n                    return <Option key={item} value={item}></Option>;\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default UpdateModal;\n","import request from \"@/utils/request\";\n\nconst getUserList = (data) => {\n  return request({\n    url: \"/api/getUserList\",\n    method: \"post\",\n    data,\n  });\n};\nexport { getUserList };\n","import React, { useState, useEffect } from \"react\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  DatePicker,\n  Col,\n  Row,\n  Table,\n  Space,\n  Tag,\n  Modal,\n} from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.less\";\nimport UpdateModal from \"./compontents/updateModal\";\nimport { getUserList } from \"@/api/systemApi\";\nimport moment from \"moment\";\nconst { RangePicker } = DatePicker;\nconst { confirm } = Modal;\nconst FormDisabledDemo = () => {\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const [tabelData, setTabelData] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [updataRow, setupdataRow] = useState(null);\n  async function fetchData(params) {\n    const { data } = await getUserList(params);\n    setTabelData(data);\n  }\n  useEffect(() => {\n    form.setFieldsValue({\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      time: [],\n    });\n    const fromData = form.getFieldsValue(); // {name: 'dee', age: 18} 获取整个表单的值\n    fetchData(fromData);\n  }, []);\n  const onDetel = () => {\n    confirm({\n      title: \"你确定要删除该用户信息吗?\",\n      icon: <ExclamationCircleOutlined />,\n      okText: \"是\",\n      okType: \"danger\",\n      cancelText: \"否\",\n\n      onOk() {\n        console.log(\"OK\");\n      },\n\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n  const toDetail = (Item) => {\n    //拼接方式用useLocation的search接收,state用state接收\n    navigate(`/system/userDetail?name=${Item.name}`, {\n      state: { age: Item.age, address: Item.address, tags: Item.tags },\n    });\n    // param传递用useParams接受\n    // navigate(`/home/message/detail/${id}/${title}`, { replace: true });\n  };\n  const columns = [\n    {\n      title: \"姓名\",\n      dataIndex: \"name\",\n      width: \"100px\",\n      key: \"name\",\n      render: (text, Item) => <a onClick={() => toDetail(Item)}>{text}</a>,\n      fixed: \"left\",\n    },\n\n    {\n      width: \"100px\",\n      title: \"年龄\",\n      dataIndex: \"age\",\n      key: \"age\",\n    },\n    {\n      width: \"130px\",\n      title: \"地址\",\n      dataIndex: \"address\",\n      key: \"address\",\n    },\n    {\n      width: \"230px\",\n      title: \"标签\",\n      key: \"tags\",\n      dataIndex: \"tags\",\n      render: (_, { tags }) => (\n        <>\n          {tags.map((tag) => {\n            let color = tag.length > 5 ? \"geekblue\" : \"green\";\n\n            if (tag === \"loser\") {\n              color = \"volcano\";\n            }\n\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      fixed: \"right\",\n      width: \"170px\",\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setVisible(true);\n              setupdataRow(record);\n            }}\n          >\n            修改\n          </Button>\n          <Button type=\"primary\" danger ghost onClick={() => onDetel()}>\n            删除\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n  const onFinish = (values) => {\n    if (values.time.length >= 1) {\n      values = {\n        ...values,\n        time: [\n          moment(values.time[0]).format(\"YYYY-MM-DD\"),\n          moment(values.time[1]).format(\"YYYY-MM-DD\"),\n        ],\n      };\n    }\n    fetchData(values);\n    //表单校验\n    // form\n    //   .validateFields()\n    //   .then((value) => {\n    //     // 验证通过后进入\n    //     const { name, age } = value;\n    //     console.log(name, age); // dee 18\n    //   })\n    //   .catch((err) => {\n    //     // 验证不通过时进入\n    //     console.log(err);\n    //   });\n  };\n  return (\n    <>\n      <h4>搜索条件</h4>\n      <Form\n        layout=\"horizontal\"\n        labelCol={{ span: 6 }}\n        form={form}\n        onFinish={onFinish}\n      >\n        <Row gutter={24}>\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"姓名\" name=\"name\">\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"年龄\" name=\"age\">\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"地址\" name=\"address\">\n              <Select>\n                <Select.Option value=\"demo\">Demo</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={{ span: 12 }} xl={{ span: 8 }} span={12}>\n            <Form.Item label=\"登录时间\" name=\"time\">\n              <RangePicker\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col\n            span={5}\n            style={{ display: \"flex\", justifyContent: \"space-around\" }}\n          >\n            <Button type=\"primary\" onClick={() => form.submit()}>\n              提交\n            </Button>\n            <Button\n              type=\"ghost\"\n              onClick={() => {\n                form.resetFields();\n                form.setFieldsValue({\n                  name: \"\",\n                  age: \"\",\n                  address: \"\",\n                  sex: \"\",\n                  time: [],\n                });\n              }}\n            >\n              重置\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <h4>数据列表</h4>\n      <Table\n        columns={columns}\n        dataSource={tabelData ? tabelData : []}\n        scroll={{\n          x: 900,\n          y: 300,\n        }}\n      />\n      {updataRow ? (\n        <UpdateModal\n          updataRow={updataRow}\n          visible={visible}\n          setVisible={setVisible}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default FormDisabledDemo;\n"],"names":["Option","UpdateModal","props","refForm","React","hideModal","setVisible","this","current","validateFields","then","value","name","age","console","log","message","catch","err","title","visible","onCancel","cancelText","footer","onClick","buttonClick","ref","initialValues","updataRow","autoComplete","gutter","span","label","rules","required","mode","allowClear","style","width","map","item","PureComponent","getUserList","data","request","url","method","RangePicker","confirm","form","navigate","useNavigate","useState","tabelData","setTabelData","setupdataRow","fetchData","params","useEffect","setFieldsValue","address","time","getFieldsValue","columns","dataIndex","key","render","text","Item","state","tags","toDetail","fixed","_","tag","color","length","toUpperCase","record","size","type","danger","ghost","icon","ExclamationCircleOutlined","okText","okType","onOk","layout","labelCol","onFinish","values","moment","format","lg","xl","justify","display","justifyContent","submit","resetFields","sex","dataSource","scroll","x","y"],"sourceRoot":""}